/*
面试题43：1~n整数中1出现的次数

思路：
逐位找当前位上出现1的次数

1. 设定整数点（如1、10、100等等）作为位置点i（对应n的个位、十位、百位等等），分别对每个数位上有多少包含1的点进行分析
2. 根据当前设定的整数位置对n进行分割，高位n/i, 低位n%i
3. 以百位为例
   a. 当百位数字>=2，例如如n=31456,i=100，则a=314,b=56，此时百位为1的次数有a/10+1=32（最高两位0~31）
      每一次都包含100个连续的点(即百位为1，后两位00~99)，即共有(a/10+1)*100个点的百位为1
   b. 当百位数字为1，例如n=31156,i=100，则a=311,b=56，最高两位0~30时共有a/10=31次，每次包含100个连续的点
      当最高两位为31时，前三位为311，此时值对应后两位00~56的b+1次
	  所以这种情况下百位为1的次数总共为(a/10)*100+(b+1)
   c. 当百位数字为0，例如n=31056,i=100，则a=310,b=56，此时百位为1的次数有a/10=31次(前两位0~30)
   
   综上，百位为1的次数总共有 (a+8)/10次包含(0~99)100个连续的值，加上数字本身百位为1的时候，后两位的b+1次

其他位类似

https://www.nowcoder.com/questionTerminal/bd7f978302044eee894445e244c7eee6?f=discussion
*/

public class Solution43 {
    public int NumberOf1Between1AndN_Solution(int n) {
        int count = 0, a, b;
        for(int i = 1; i <= n; i *= 10){  // i表示现在统计的数位
            a = n / i; 
            b = n % i;
            count += (a + 8) / 10 * i + ((a % 10 == 1) ? (b + 1) : 0);
        }
        return count;
    }
}
